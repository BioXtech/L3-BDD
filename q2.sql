DROP TABLE CanalPlusRiche CASCADE CONSTRAINTS;

-- SERIES PART OF THE DATABASE
CREATE TABLE SERIES_DIRECTOR(
  DIRECTOR_ID INTEGER,
  FIRST_NAME VARCHAR NOT NULL,
  LAST_NAME VARCHAR NOT NULL,
  CONSTRAINT PK_SERIES_DIRECTOR PRIMARY KEY(DIRECTOR_ID)
);

CREATE TABLE SEASON(
    SEASON_ID INTEGER,
    EPISODE_COUNT INTEGER NOT NULL,
    CUSTOMER_RATING FLOAT(2),
    CONSTRAINT PK_SEASON PRIMARY KEY(SEASON_ID)
);

CREATE TABLE ACTOR(
    ACTOR_ID INTEGER,
  FIRST_NAME VARCHAR NOT NULL,
  LAST_NAME VARCHAR NOT NULL,
  CONSTRAINT PK_ACTOR PRIMARY KEY(ACTOR_ID)
);

CREATE TABLE SERIES(
    SERIES_ID INTEGER,
    SEASON_NUMBER INTEGER NOT NULL,
    CONSTRAINT PK_SERIES PRIMARY KEY(SERIES_ID)
);

CREATE TABLE LINK_SERIES_DIRECTOR_SEASON(
    DIRECTOR_ID INTEGER NOT NULL,
    SEASON_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SERIES_DIRECTOR_SEASON PRIMARY KEY(DIRECTOR_ID, SEASON_ID),
    CONSTRAINT FK_DIRECTOR_SEASON FOREIGN KEY(DIRECTOR_ID) REFERENCES SERIES_DIRECTOR(DIRECTOR_ID),
    CONSTRAINT FK_DIRECTOR_SEASON_2 FOREIGN KEY(SEASON_ID) REFERENCES SEASON(SEASON_ID)
);

CREATE TABLE LINK_ACTOR_SEASON(
    ACTOR_ID INTEGER NOT NULL,
    SEASON_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_ACTOR_SEASON PRIMARY KEY(ACTOR_ID, SEASON_ID),
    CONSTRAINT FK_ACTOR_SEASON FOREIGN KEY(ACTOR_ID) REFERENCES ACTOR(ACTOR_ID),
    CONSTRAINT FK_ACTOR_SEASON_2 FOREIGN KEY(SEASON_ID) REFERENCES SEASON(SEASON_ID)
);

CREATE TABLE LINK_SERIES_SEASON(
    SERIES_ID INTEGER NOT NULL,
    SEASON_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SERIES_SEASON PRIMARY KEY(SERIES_ID, SEASON_ID),
    CONSTRAINT FK_SERIES_SEASON FOREIGN KEY(SERIES_ID) REFERENCES SERIES(SERIES_ID),
    CONSTRAINT FK_SERIES_SEASON_2 FOREIGN KEY(SEASON_ID) REFERENCES SEASON(SEASON_ID)
);

-- MOVIES PART OF THE DATABASE
CREATE TABLE MOVIE(
    MOVIE_ID INTEGER,
    MOVIE_LENGTH NUMBER(4) NOT NULL,
    CONSTRAINT PK_MOVIE PRIMARY KEY(MOVIE_ID)
);

CREATE TABLE SCRIPTWRITER(
    SCRIPTWRITER_ID INTEGER,
    FIRST_NAME VARCHAR NOT NULL,
    LAST_NAME VARCHAR NOT NULL,
    CONSTRAINT PK_SCRIPTWRITER PRIMARY KEY(SCRIPTWRITER_ID)
);

CREATE TABLE LINK_ACTOR_MOVIE(
    ACTOR_ID INTEGER NOT NULL,
    MOVIE_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_ACTOR_MOVIE PRIMARY KEY(ACTOR_ID, MOVIE_ID),
    CONSTRAINT FK_ACTOR_MOVIE FOREIGN KEY(ACTOR_ID) REFERENCES ACTOR(ACTOR_ID),
    CONSTRAINT FK_ACTOR_MOVIE_2 FOREIGN KEY(MOVIE_ID) REFERENCES MOVIE(MOVIE_ID)
);

CREATE TABLE LINK_SCRIPTWRITER_MOVIE(
    SCRIPTWRITER_ID INTEGER NOT NULL,
    MOVIE_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SCRIPTWRITER_MOVIE PRIMARY KEY(SCRIPTWRITER_ID, MOVIE_ID),
    CONSTRAINT FK_SCRIPTWRITER_MOVIE FOREIGN KEY(SCRIPTWRITER_ID) REFERENCES SCRIPTWRITER(SCRIPTWRITER_ID),
    CONSTRAINT FK_SCRIPTWRITER_MOVIE_2 FOREIGN KEY(MOVIE_ID) REFERENCES MOVIE(MOVIE_ID)
);

-- YOUTH PART OF THE DATABASE
CREATE TABLE COMPOSER(
    COMPOSER_ID INTEGER,
    FIRST_NAME VARCHAR NOT NULL,
    LAST_NAME VARCHAR NOT NULL,
    CONSTRAINT PK_COMPOSER PRIMARY KEY(COMPOSER_ID)
);

CREATE TABLE YOUTH(
    YOUTH_ID INTEGER,
    YOUTH_LENGTH NUMBER(4) NOT NULL,
    CONSTRAINT PK_YOUTH PRIMARY KEY(YOUTH_ID)
);

CREATE TABLE LINK_SCRIPTWRITER_YOUTH(
    SCRIPTWRITER_ID INTEGER NOT NULL,
    YOUTH_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SCRIPTWRITER_YOUTH PRIMARY KEY(SCRIPTWRITER_ID, YOUTH_ID),
    CONSTRAINT FK_SCRIPTWRITER_YOUTH FOREIGN KEY(SCRIPTWRITER_ID) REFERENCES SCRIPTWRITER(SCRIPTWRITER_ID),
    CONSTRAINT FK_SCRIPTWRITER_YOUTH_2 FOREIGN KEY(YOUTH_ID) REFERENCES YOUTH(YOUTH_ID)
);

CREATE TABLE LINK_COMPOSER_YOUTH(
    COMPOSER_ID INTEGER NOT NULL,
    YOUTH_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_COMPOSER_YOUTH PRIMARY KEY(COMPOSER_ID, YOUTH_ID),
    CONSTRAINT FK_COMPOSER_YOUTH FOREIGN KEY(COMPOSER_ID) REFERENCES COMPOSER(COMPOSER_ID),
    CONSTRAINT FK_COMPOSER_YOUTH_2 FOREIGN KEY(YOUTH_ID) REFERENCES YOUTH(YOUTH_ID)
);

-- SHOW PART OF THE DATABASE
CREATE TABLE 'SHOW'(
    SHOW_ID INTEGER,
    SHOW_LENGTH NUMBER(4) NOT NULL,
    CONSTRAINT PK_SHOW PRIMARY KEY(SHOW_ID)
);

CREATE TABLE SHOW_DIRECTOR(
    DIRECTOR_ID INTEGER,
    FIRST_NAME VARCHAR NOT NULL,
    LAST_NAME VARCHAR NOT NULL,
    CONSTRAINT PK_SHOW_DIRECTOR PRIMARY KEY(DIRECTOR_ID)
);

CREATE TABLE PERFORMER(
    PERFORMER_ID INTEGER,
    FIRST_NAME VARCHAR NOT NULL,
    LAST_NAME VARCHAR NOT NULL,
    CONSTRAINT PK_PERFORMER PRIMARY KEY(PERFORMER_ID)
);

CREATE TABLE LINK_SCRIPTWRITER_SHOW(
    SCRIPTWRITER_ID INTEGER NOT NULL,
    SHOW_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SCRIPTWRITER_SHOW PRIMARY KEY(SCRIPTWRITER_ID, SHOW_ID),
    CONSTRAINT FK_SCRIPTWRITER_SHOW FOREIGN KEY(SCRIPTWRITER_ID) REFERENCES SCRIPTWRITER(SCRIPTWRITER_ID),
    CONSTRAINT FK_SCRIPTWRITER_SHOW_2 FOREIGN KEY(SHOW_ID) REFERENCES SHOW(SHOW_ID)
);

CREATE TABLE LINK_SHOW_DIRECTOR_SHOW(
    DIRECTOR_ID INTEGER NOT NULL,
    SHOW_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_SHOW_DIRECTOR_SHOW PRIMARY KEY(DIRECTOR_ID, SHOW_ID),
    CONSTRAINT FK_SHOW_DIRECTOR_SHOW FOREIGN KEY(DIRECTOR_ID) REFERENCES SHOW_DIRECTOR(DIRECTOR_ID),
    CONSTRAINT FK_SHOW_DIRECTOR_SHOW_2 FOREIGN KEY(SHOW_ID) REFERENCES SHOW(SHOW_ID)
);

CREATE TABLE LINK_PERFORMER_SHOW(
    PERFORMER_ID INTEGER NOT NULL,
    SHOW_ID INTEGER NOT NULL,
    CONSTRAINT PK_LINK_PERFORMER_SHOW PRIMARY KEY(PERFORMER_ID, SHOW_ID),
    CONSTRAINT FK_PERFORMER_SHOW FOREIGN KEY(PERFORMER_ID) REFERENCES PERFORMER(PERFORMER_ID),
    CONSTRAINT FK_PERFORMER_SHOW_2 FOREIGN KEY(SHOW_ID) REFERENCES SHOW(SHOW_ID)
);



